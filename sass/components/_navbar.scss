:root {
  --transition-time: 1.5s;
  --transform-time: 1.5s;
  --opacity-time: 1.5s;
  --transition-delay: 1s;
}

.navbar {
  width: 6rem;
  height: 6rem;
  border-radius: 50%;
  position: absolute;
  bottom: 6%;
  @include flex-center-row;
  background-color: map-get($colors, "dark-blue");
  cursor: pointer;
  z-index: 2222222222222222222222222222;
  -webkit-tap-highlight-color: transparent !important;

  &::before {
    content: "\f192";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-family: "fontello";
    font-size: 2.3rem;
    color: lighten(map-get($colors, "light-beige"), 20%);
  }

  &__list {
    width: 100%;
    height: 100%;
    position: relative;
    border-radius: 50%;

    &--item {
      position: absolute;
      left: 13.5%;
      @include fade(hide);

      // ! don't repeat yourself
      &.active {
        @include fade(show);
      }

      &-link {
        width: 4.5rem;
        height: 4.5rem;
        border-radius: 50%;
        @include flex-center-row;
        font-size: 1.7rem;
        color: lighten(map-get($colors, "light-beige"), 20%);
        background-color: map-get($colors, "dark-blue");
        @include transition(background-color, 0.2, ease-in-out, 0);

        &::before {
          content: attr(data-title);
          width: 10rem;
          padding: 1rem 0.6rem;
          border-radius: 0.5rem;
          position: absolute;
          top: 0.2rem;
          left: -14rem;
          text-align: center;
          text-transform: capitalize;
          font-size: 1.5rem;
          @include prefixing(user-select, none);
          @include fade(hide);
          color: map-get($colors, "accent-light");
          background-color: map-get($colors, "dark-blue");
          z-index: 999933333333333333339999;
          @include transition(all, 0.2, ease-in, 0);

          @include breakpoint(mobile) {
            content: none;
          }
        }

        &:hover {
          background-color: lighten(map-get($colors, "darker-blue"), 10%);
        }

        &:hover::before {
          @include fade(show);

          @include breakpoint(tablet) {
            left: -14rem;
          }
        }

        &:focus::before {
          left: -14rem;

          @include breakpoint(tablet) {
            left: -14rem;
          }
        }
      }
    }
  }

  &__primary {
    right: 6%;

    &__list {
      &--item {
        &:nth-child(1) {
          // ! every time add -75% for symmetric
          // ! and you could use it as data-top or custom-prop for =>>> *dynamic
          top: -75%;
          // ! don't repeat yourself =>>> i think you could give all of them this mixin in one selector
          // ! then make mixin for delay time -- or variable
          // ! because here you =>>> copy mixin same code every were you call it in
          @include transition(all, 0.2, ease-in-out, 0.2);

          &.active {
            // ! every time add -107% or -100 for symmetric
            top: -100%;
          }
        }

        &:nth-child(2) {
          top: -180%;
          @include transition(all, 0.2, ease-in-out, 0.33);

          &.active {
            top: -207%;
          }
        }

        &:nth-child(3) {
          top: -280%;
          @include transition(all, 0.2, ease-in-out, 0.4);

          &.active {
            top: -315%;
          }
        }

        &:nth-child(4) {
          top: -370%;
          @include transition(all, 0.2, ease-in-out, 0.53);

          &.active {
            top: -428%;
          }
        }
      }
    }
  }

  &__social {
    left: 6%;
    width: 4.5rem;
    height: 4.5rem;
    transition: left var(--transition-time), bottom var(--transition-time), transform 0s, background 1s;
    transition-delay: var(--transition-delay);

    &::before {
      content: "\e804";
    }

    li {
      transition: all var(--transform-time);
      transition-delay: var(--transition-delay);

      a {
        &:before {
          content: none !important;
        }
      }

      &.selected {
        transform: translateY(-2000%);
        transition: all 3s;
      }
    }

    &.active {
      bottom: 50%;
      left: 50%;
      transform: translate(-50%, 50%);
      transition-delay: unset;

      li {
        left: 0;

        &.active {
          transform: var(--translate);
          opacity: 1;
          transition: transform var(--transform-time), opacity var(--opacity-time);
          transition-delay: var(--transition-delay);
        }

        a {
          transition: transform 0.7s;

          &:hover {
            transform: scale(1.1);
          }
        }
      }
    }
  }
}
